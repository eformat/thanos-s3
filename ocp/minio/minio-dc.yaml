apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-s3
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
    app.kubernetes.io/version: "0.0.1"
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: minio
        app.kubernetes.io/version: "0.0.1"
    spec:
      containers:
        - name: minio
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10

          image: docker.io/minio/minio:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          args:
            - server
            - /storage
#            - --config-dir=/config
            - --console-address=:33933
          env:
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_TRACE
              value: "true"
            - name: MINIO_ROOT_USER
              value: "minio"
            - name: MINIO_ROOT_PASSWORD
              value: "minio123"

          ports:
            - containerPort: 9000
            - containerPort: 33933
          volumeMounts:
            - name: storage
              mountPath: "/storage"
#            - name: config
#              mountPath: "/config"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-s3
#        - name: config
#          emptyDir: {}
